name: Deploy PRO tenant 🚀

on:
  workflow_dispatch:
  push:
    branches:
        main
env:
  CLIENT: 'deprisa'
  ENVIROMENT: 'qa'

permissions:
  id-token: write
  contents: read

jobs:
  # 🌐 1. Desplegar Infraestructura
  deploy-infra:
    name: Deploy Azure Infraestructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v4

      - name: Azure Login 🔐
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_PRO }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_PRO }}

      - name: Deploy Infrastructure 🚀
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: create
          name: PRO2-Deployment
          location: eastus
          scope: subscription
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_PRO }}
          template-file: ./infra/main.bicep
          parameters-file: ./infra/main.parameters.json

  build-test:
    name: Build and Test WebApp
    runs-on: ubuntu-latest
    needs: deploy-infra

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          repository: CarlosGazabon/valentine # Cambia a tu repositorio de tests

      - name: Install Dependencies 🛠️
        run: npm install

      - name: Test
        run: npm test
      
      - name: Build
        run: npm run build

  build-and-push-acr:
    name: Build and Push to ACR
    needs: [deploy-infra, build-test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          repository: CarlosGazabon/valentine # Cambia a tu repositorio de tests

      - name: Azure Login 🔐
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_PRO }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_PRO }}

      - name: Get ACR Credentials 🔑
        id: acr-creds
        run: |
          ACR_NAME="acr${CLIENT}${ENVIROMENT}"
          echo "ACR_NAME=$ACR_NAME"

          CREDS=$(az acr credential show --name $ACR_NAME --query "{username:username,password:passwords[0].value}" -o json)
          echo "ACR_USERNAME=$(echo $CREDS | jq -r .username)" >> $GITHUB_OUTPUT
          echo "ACR_PASSWORD=$(echo $CREDS | jq -r .password)" >> $GITHUB_OUTPUT
          echo "ACR_LOGIN_SERVER=$(az acr show --name $ACR_NAME --query loginServer -o tsv)" >> $GITHUB_OUTPUT

      - name: Docker Login to ACR 🔑
        id: docker-login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.acr-creds.outputs.ACR_LOGIN_SERVER }}
          username: ${{ steps.acr-creds.outputs.ACR_USERNAME }}
          password: ${{ steps.acr-creds.outputs.ACR_PASSWORD }}

      - name: Build and Push Docker Image 🚢
        run: |
          docker build . -t acrdeprisaqa.azurecr.io/latest:${{ github.sha }}
          docker push acrdeprisaqa.azurecr.io/latest:${{ github.sha }}

      - name: Deploy to App Service 🚀
        uses: azure/webapps-deploy@v2
        with:
          app-name: webapp-${{ env.CLIENT }}-${{ env.ENVIROMENT }}
          images: acrdeprisaqa.azurecr.io/latest:${{ github.sha }}

  deploy-appservice:
    if: github.event_name == 'workflow_dispatch' 
    name: Deploy to App Service 🚀
    needs: [build-and-push-acr]
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login 🔐
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_PRO }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_PRO }}

      - name: Set Dynamic Variables 🧠
        id: vars
        run: |
          APP_NAME="webapp-${CLIENT}-${ENVIROMENT}"
          ACR_NAME="acr${CLIENT}${ENVIROMENT}"
          ACR_LOGIN_SERVER=$(az acr show --name $ACR_NAME --query loginServer -o tsv)

          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "acr_login_server=$ACR_LOGIN_SERVER" >> $GITHUB_OUTPUT

      - name: Deploy to App Service 🚀
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.vars.outputs.app_name }}
          images: ${{ steps.vars.outputs.acr_login_server }}/todo-front:${{ github.sha }}

